{"version":3,"sources":["components/CodeBlock.tsx","helpers/getNotesList.tsx","helpers/uuid.ts","contexts/NotesProvider.tsx","hooks/useNote.ts","hooks/useNotes.ts","components/Modal.tsx","components/NoteSettings.tsx","components/ToggleModeButton.tsx","components/NoteContainer.tsx","components/AddNote.tsx","components/SideBar.tsx","components/Error.tsx","components/Empty.tsx","screens/Home.tsx","screens/Routes.tsx","serviceWorker.ts","index.tsx","Cog_font_awesome.svg"],"names":["CodeBlock","value","language","getNotesList","rawList","localStorage","getItem","JSON","parse","uuidv4","replace","c","r","Math","random","toString","NotesContext","createContext","addNote","editNoteName","removeNote","notes","currentNote","NotesProvider","props","useState","setNotes","setCurrentNote","push","useHistory","readNotes","useCallback","newNotes","useEffect","setItem","stringify","checkIfNameIsAllowed","name","isNameTaken","some","note","toLowerCase","errorMessage","match","Error","callback","newList","id","noteId","filter","item","removeItem","map","rawNote","oldNote","Provider","children","useNotes","useContext","modalRoot","document","getElementById","Modal","classList","add","remove","ReactDOM","createPortal","NoteSettings","showSettings","setShowSettings","useParams","setName","toggleMode","state","handleEditNote","toast","success","position","POSITION","TOP_RIGHT","e","error","TOP_LEFT","handleDeleteNote","handleClose","preventDefault","handleKeyDown","keyCode","handleInputChange","target","className","onClick","src","Cog","alt","href","onChange","onKeyDown","ToggleModeButton","typingMode","mode","onToggleChange","onItemPress","generateKeySelection","cm","prefix","selection","getSelection","length","slice","replaceSelection","options","autofocus","extraKeys","WrapCheckBox","markdown","setMarkdown","sourcePosition","checked","type","lineIndex","start","line","lines","split","find","join","console","warn","modes","NoteContainer","setNote","locaStorageTypingMode","initialType","setTypingMode","noteName","setNoteName","handleCodeMirrorChange","editor","data","useNote","renderers","listItem","code","isPreviewMode","isBothMode","isEditMode","classNames","key","onBeforeChange","source","rawSourcePos","escapeHtml","AddNote","inputRef","useRef","current","focus","handleAddNote","message","handleInput","ref","SideBarNotesList","index","to","SideBar","addMode","setAddMode","showNotesList","setShowNotesList","sideBarRef","handleAddNoteClick","CSSTransition","in","timeout","Empty","shown","setShown","timeoutId","setTimeout","clearTimeout","Home","isError","setIsError","isEmpty","setIsEmpty","title","Routes","basename","path","Boolean","window","location","hostname","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.646c0941.chunk.js","sourcesContent":["import React, { FC } from 'react';\n\nimport Highlight from 'react-highlight.js';\n\ninterface Props {\n  value: string;\n  language: string;\n}\n\nconst CodeBlock: FC<Props> = ({ value, language }) => {\n  return <Highlight language={language}>{value}</Highlight>;\n};\n\nexport default CodeBlock;\n","export const NOTE_LIST_KEY = 'note_lists';\n\nconst getNotesList = () => {\n  const rawList = localStorage.getItem(NOTE_LIST_KEY) || '[]';\n  const list = JSON.parse(rawList);\n\n  return list;\n};\n\nexport default getNotesList;\n","function uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = (Math.random() * 16) | 0,\n      v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\nexport default uuidv4;\n","import React, {\n  createContext,\n  ReactNode,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\n\nimport { useHistory } from 'react-router-dom';\nimport { TYPING_MODE_KEY } from '../hooks/useNote';\nimport getNotesList, { NOTE_LIST_KEY } from '../helpers/getNotesList';\nimport { ListNoteItem } from '../helpers/interfaces';\nimport uuidv4 from '../helpers/uuid';\n\ninterface SingeNote {\n  id: string;\n  name: string;\n  value: string;\n}\n\ninterface NotesContext {\n  addNote: (name: string, callback: () => void) => void;\n  editNoteName: (noteId: string, name: string, callback: () => void) => void;\n  removeNote: (name: string, callback: () => void) => void;\n  notes: ListNoteItem[];\n  currentNote: SingeNote | null;\n}\n\nexport const NotesContext = createContext<NotesContext>({\n  addNote: () => {},\n  editNoteName: () => {},\n  removeNote: () => {},\n  notes: [],\n  currentNote: null,\n});\n\ninterface Props {\n  children?: ReactNode;\n}\n\nexport function NotesProvider(props: Props) {\n  const [notes, setNotes] = useState<ListNoteItem[]>([]);\n  const [currentNote, setCurrentNote] = useState<SingeNote | null>(null);\n  const { push } = useHistory();\n\n  const readNotes = useCallback(() => {\n    const newNotes = getNotesList();\n    setNotes(newNotes);\n  }, []);\n\n  useEffect(() => {\n    readNotes();\n    setCurrentNote(null);\n  }, [readNotes]);\n\n  useEffect(() => {\n    localStorage.setItem(NOTE_LIST_KEY, JSON.stringify(notes));\n  }, [notes]);\n\n  const checkIfNameIsAllowed = useCallback(\n    (name: string) => {\n      const isNameTaken = notes.some(\n        note => note.name.toLowerCase() === name.toLowerCase(),\n      );\n\n      let errorMessage = null;\n      if (!name) {\n        errorMessage = 'Name can not be empty';\n      } else if (name === NOTE_LIST_KEY || name === TYPING_MODE_KEY) {\n        errorMessage = 'This name is not allowed';\n      } else if (isNameTaken) {\n        errorMessage = 'This name is already taken';\n      } else if (name.match(/[#/]/)) {\n        errorMessage = \"You can't use # or / characters\";\n      }\n      if (errorMessage) {\n        throw new Error(errorMessage);\n      }\n\n      return;\n    },\n    [notes],\n  );\n\n  const addNote = useCallback(\n    (name, callback) => {\n      checkIfNameIsAllowed(name);\n\n      const newNote: ListNoteItem = {\n        name,\n        id: uuidv4(),\n      };\n      const newList = [newNote, ...notes];\n      setNotes(newList);\n      localStorage.setItem(\n        name,\n        JSON.stringify({\n          name,\n          value: '',\n        }),\n      );\n      push(`/note/${name}`);\n      callback();\n    },\n    [notes, checkIfNameIsAllowed, push],\n  );\n\n  const removeNote = useCallback(\n    (noteId: string, callback: () => void) => {\n      const newNotes = notes.filter(\n        (item: ListNoteItem) => item.name !== noteId,\n      );\n      setNotes(newNotes);\n\n      push(`/note/${newNotes[0]?.name ?? ''}`);\n      localStorage.removeItem(noteId);\n      callback();\n    },\n    [notes, push],\n  );\n\n  const editNoteName = useCallback(\n    (noteId: string, name: string, callback: () => void) => {\n      checkIfNameIsAllowed(name);\n\n      const newNotes = notes.map(item => {\n        if (item.name === noteId) {\n          return { ...item, name };\n        }\n        return item;\n      });\n      const rawNote = localStorage.getItem(noteId);\n\n      if (rawNote) {\n        const oldNote = JSON.parse(rawNote);\n        const value = JSON.stringify({\n          name,\n          value: oldNote?.value,\n        });\n\n        localStorage.setItem(name, value);\n        setNotes(newNotes);\n        localStorage.setItem(NOTE_LIST_KEY, JSON.stringify(newNotes));\n        callback();\n      }\n      push(`/note/${name}`);\n      localStorage.removeItem(noteId);\n    },\n    [checkIfNameIsAllowed, notes, push],\n  );\n\n  return (\n    <NotesContext.Provider\n      value={{\n        addNote,\n        editNoteName,\n        removeNote,\n        notes,\n        currentNote,\n      }}>\n      {props.children}\n    </NotesContext.Provider>\n  );\n}\n","import { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { NotesParams } from '../screens/Routes';\nimport { modes } from '../components/NoteContainer';\n\nexport const TYPING_MODE_KEY = 'typing_mode';\n\nexport const useNote = () => {\n  const [note, setNote] = useState<string>('');\n  const { noteId } = useParams<NotesParams>();\n\n  const locaStorageTypingMode = localStorage.getItem(TYPING_MODE_KEY);\n  const initialType =\n    locaStorageTypingMode === 'preview'\n      ? 'preview'\n      : locaStorageTypingMode === 'edit'\n      ? 'edit'\n      : 'both';\n\n  const [typingMode, setTypingMode] = useState<modes>(initialType);\n  const [noteName, setNoteName] = useState('');\n\n  useEffect(() => {\n    localStorage.setItem(TYPING_MODE_KEY, typingMode);\n  }, [typingMode]);\n\n  useEffect(() => {\n    const rawNote = localStorage.getItem(noteId);\n    if (rawNote) {\n      setNoteName(JSON.parse(rawNote).name);\n      setNote(JSON.parse(rawNote).value);\n    }\n  }, [noteId, setNote]);\n\n  useEffect(() => {\n    if (noteId && note) {\n      localStorage.setItem(\n        noteId,\n        JSON.stringify({\n          name: noteName,\n          value: note,\n        }),\n      );\n    }\n  }, [note, noteId, noteName]);\n\n  const handleCodeMirrorChange = useCallback(\n    (editor, data, value) => {\n      setNote(value);\n    },\n    [setNote],\n  );\n\n  return {\n    note,\n    setNote,\n    noteName,\n    typingMode,\n    setTypingMode,\n    handleCodeMirrorChange,\n  };\n};\n","import { useContext } from 'react';\nimport { NotesContext } from '../contexts/NotesProvider';\n\nexport const useNotes = () => useContext(NotesContext);\n","import { FC, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst modalRoot = document.getElementById('modal-root') as HTMLElement;\n\nexport type ModalProps = {\n  children: React.ReactNode;\n};\n\nexport const Modal: FC<ModalProps> = ({ children }) => {\n  useEffect(() => {\n    modalRoot.classList.add('shown');\n\n    return () => {\n      modalRoot.classList.remove('shown');\n    };\n  }, []);\n\n  return ReactDOM.createPortal(children, modalRoot);\n};\n","import React, { FC, useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport Cog from '../Cog_font_awesome.svg';\nimport { useNotes } from '../hooks/useNotes';\nimport { NotesParams } from '../screens/Routes';\nimport { Modal } from './Modal';\n\nconst NoteSettings: FC = () => {\n  const [showSettings, setShowSettings] = useState(false);\n  const { noteId } = useParams<NotesParams>();\n  const [name, setName] = useState(noteId);\n  const { editNoteName, removeNote } = useNotes();\n\n  useEffect(() => {\n    setName(noteId);\n  }, [noteId]);\n\n  const toggleMode = useCallback(() => {\n    setShowSettings(state => !state);\n  }, []);\n\n  const handleEditNote = useCallback(() => {\n    try {\n      editNoteName(noteId, name, () => {\n        toast.success('Note name edited successfuly', {\n          position: toast.POSITION.TOP_RIGHT,\n        });\n        toggleMode();\n      });\n    } catch (e) {\n      toast.error(e, {\n        position: toast.POSITION.TOP_LEFT,\n      });\n    }\n  }, [editNoteName, name, noteId, toggleMode]);\n\n  const handleDeleteNote = useCallback(() => {\n    removeNote(noteId, () => {\n      toast.success('Note deleted successfuly', {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n    });\n  }, [noteId, removeNote]);\n\n  const handleClose = useCallback(\n    e => {\n      e.preventDefault();\n      toggleMode();\n    },\n    [toggleMode],\n  );\n\n  const handleKeyDown = useCallback(\n    e => {\n      if (e.keyCode === 13) {\n        handleEditNote();\n      }\n    },\n    [handleEditNote],\n  );\n\n  const handleInputChange = useCallback(e => setName(e.target.value), []);\n\n  return (\n    <>\n      <div className=\"note-settings\" onClick={toggleMode}>\n        <img src={Cog} alt=\"React Logo\" className=\"cog-icon\" />\n      </div>\n      {showSettings && (\n        <Modal>\n          <div className=\"add-note-wrappper\">\n            <div className=\"add-note-container\">\n              <a href=\"/\" onClick={handleClose}>\n                Close\n              </a>\n              <input\n                value={name}\n                onChange={handleInputChange}\n                onKeyDown={handleKeyDown}\n              />\n              <div className=\"mb\">\n                <button className=\"button\" onClick={handleEditNote}>\n                  Edit note name\n                </button>\n              </div>\n              <button\n                className=\"button button-danger\"\n                onClick={handleDeleteNote}>\n                Delete note\n              </button>\n            </div>\n            <div onClick={toggleMode} className=\"add-note-background\"></div>\n          </div>\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default NoteSettings;\n","import React, { FC, useCallback } from 'react';\nimport { modes } from './NoteContainer';\n\ninterface Props {\n  typingMode: modes;\n  mode: modes;\n  onToggleChange: (mode: modes) => void;\n}\n\nconst ToggleModeButton: FC<Props> = ({ typingMode, mode, onToggleChange }) => {\n  const onItemPress = useCallback(() => onToggleChange(mode), [\n    onToggleChange,\n    mode,\n  ]);\n  return (\n    <button\n      className={`mode-button${\n        typingMode === mode ? ' mode-button-active' : ''\n      }`}\n      onClick={onItemPress}>\n      {mode}\n    </button>\n  );\n};\n\nexport default ToggleModeButton;\n","import React from 'react';\nimport { Controlled as CodeMirror } from 'react-codemirror2';\nimport ReactMarkdown from 'react-markdown/with-html';\nimport classNames from 'classnames';\n\nimport CodeBlock from './CodeBlock';\nimport NoteSettings from './NoteSettings';\nimport ToggleModeButton from './ToggleModeButton';\nimport { useNote } from '../hooks/useNote';\n\nconst generateKeySelection = (cm: any, prefix: string) => {\n  const selection = cm.getSelection();\n\n  if (selection.length > 0) {\n    const match =\n      `${selection.slice(0, 2)}${selection.slice(-2)}` === prefix + prefix;\n    if (match) {\n      cm.replaceSelection(`${selection.slice(2).slice(0, -2)}`);\n    } else {\n      cm.replaceSelection(`${prefix}${selection}${prefix}`);\n    }\n  }\n};\n\nconst options = {\n  mode: 'markdown',\n  autofocus: true,\n  extraKeys: {\n    'Cmd-B': (cm: any) => generateKeySelection(cm, '**'),\n    'Cmd-I': (cm: any) => generateKeySelection(cm, '*'),\n  },\n};\n\nconst markdownChecked = '- [x]';\nconst markdownUnchecked = '- [ ]';\n\nconst WrapCheckBox = (props: any) => {\n  const { markdown, setMarkdown, sourcePosition, checked, children } = props;\n  const flipCheckBox = () => {\n    try {\n      const lineIndex = sourcePosition.start.line - 1;\n      const lines = markdown.split('\\n');\n      const find = checked ? markdownChecked : markdownUnchecked;\n      const replace = checked ? markdownUnchecked : markdownChecked;\n\n      lines[lineIndex] = lines[lineIndex].replace(find, replace);\n      setMarkdown(lines.join('\\n'));\n    } catch (error) {\n      console.warn('Error while filpin checkbox: ', error);\n    }\n  };\n  return (\n    <li>\n      <input type=\"checkbox\" checked={checked} onChange={flipCheckBox} />\n      {children}\n    </li>\n  );\n};\n\nconst modes = ['edit', 'preview', 'both'] as const;\nexport type modes = typeof modes[number];\n\nconst NoteContainer = () => {\n  const {\n    note,\n    setNote,\n    noteName,\n    typingMode,\n    setTypingMode,\n    handleCodeMirrorChange,\n  } = useNote();\n\n  const renderers = {\n    listItem: (props: any): any => {\n      const { children } = props;\n      if (typeof props.checked === 'boolean') {\n        const { checked, sourcePosition } = props;\n        return (\n          <WrapCheckBox\n            markdown={note}\n            setMarkdown={setNote}\n            checked={checked}\n            sourcePosition={sourcePosition}>\n            {children}\n          </WrapCheckBox>\n        );\n      }\n      return <li>{children}</li>;\n    },\n    code: CodeBlock,\n  };\n\n  const isPreviewMode = typingMode === 'preview';\n  const isBothMode = typingMode === 'both';\n  const isEditMode = typingMode === 'edit';\n\n  return (\n    <div className=\"note\">\n      <NoteSettings />\n      <div\n        className={classNames('note-wrapper', {\n          'note-wrapper--both': isBothMode,\n        })}>\n        <div className=\"mode-buttons-container\">\n          {modes.map(mode => (\n            <ToggleModeButton\n              key={mode}\n              mode={mode}\n              typingMode={typingMode}\n              onToggleChange={setTypingMode}\n            />\n          ))}\n        </div>\n        <h1 className=\"note-title\">{noteName}</h1>\n        <div className=\"note-container\">\n          {(isEditMode || isBothMode) && (\n            <div className=\"code-mirror-container\">\n              <CodeMirror\n                value={note}\n                options={options}\n                onBeforeChange={handleCodeMirrorChange}\n              />\n            </div>\n          )}\n          {(isPreviewMode || isBothMode) && (\n            <div className=\"react-markdown-container markdown-body\">\n              <ReactMarkdown\n                renderers={renderers}\n                source={note}\n                rawSourcePos\n                escapeHtml={false}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NoteContainer;\n","import React, { FC, useCallback, useEffect, useRef, useState } from 'react';\nimport { Modal } from './Modal';\nimport { useNotes } from '../hooks/useNotes';\nimport { toast } from 'react-toastify';\n\ninterface AddNoteProps {\n  toggleMode: () => void;\n}\n\nconst AddNote: FC<AddNoteProps> = ({ toggleMode }) => {\n  const [name, setName] = useState('');\n  const inputRef = useRef<HTMLInputElement | null>();\n  const { addNote } = useNotes();\n\n  useEffect(() => {\n    inputRef.current?.focus();\n  }, []);\n\n  const handleAddNote = useCallback(() => {\n    try {\n      addNote(name, () => {\n        toast.success('Note added successfuly', {\n          position: toast.POSITION.TOP_RIGHT,\n        });\n        toggleMode();\n      });\n    } catch (e) {\n      toast.error(e.message, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n    }\n  }, [addNote, name, toggleMode]);\n\n  const handleClose = useCallback(\n    e => {\n      e.preventDefault();\n      toggleMode();\n    },\n    [toggleMode],\n  );\n\n  const handleInput = useCallback(e => {\n    setName(e.target.value);\n  }, []);\n\n  const handleKeyDown = useCallback(\n    e => {\n      if (e.keyCode === 13) {\n        handleAddNote();\n      }\n    },\n    [handleAddNote],\n  );\n\n  return (\n    <Modal>\n      <div className=\"add-note-wrappper\">\n        <div className=\"add-note-container\">\n          <a href=\"/\" onClick={handleClose}>\n            Close\n          </a>\n          <input\n            ref={ref => (inputRef.current = ref)}\n            value={name}\n            onChange={handleInput}\n            onKeyDown={handleKeyDown}\n          />\n          <button className=\"button\" onClick={handleAddNote}>\n            Add new note\n          </button>\n        </div>\n        <div onClick={toggleMode} className=\"add-note-background\"></div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default AddNote;\n","import React, { useState, useRef, useCallback } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { ListNoteItem } from '../helpers/interfaces';\nimport AddNote from './AddNote';\nimport { CSSTransition } from 'react-transition-group';\nimport { useNotes } from '../hooks/useNotes';\nimport { NotesParams } from '../screens/Routes';\n\nconst SideBarNotesList = () => {\n  const { notes } = useNotes();\n  const { noteId } = useParams<NotesParams>();\n\n  return (\n    <div className=\"links-container\">\n      {notes.map((item: ListNoteItem, index: number) => {\n        return (\n          <Link\n            key={index}\n            to={`/note/${item.name}`}\n            className={noteId === item.name ? 'active-item' : ''}>\n            {item.name}\n          </Link>\n        );\n      })}\n    </div>\n  );\n};\n\nfunction SideBar() {\n  const [addMode, setAddMode] = useState(false);\n  const [showNotesList, setShowNotesList] = useState(false);\n  const sideBarRef = useRef<HTMLDivElement | null>(null);\n\n  const toggleMode = useCallback(() => {\n    setAddMode(state => !state);\n  }, []);\n\n  const handleAddNoteClick = useCallback(\n    e => {\n      e.preventDefault();\n      toggleMode();\n    },\n    [toggleMode],\n  );\n\n  return (\n    <>\n      <div\n        className={classNames('sidebar-toggle', {\n          'sidebar-toggle--opened': showNotesList,\n        })}\n        onClick={() => setShowNotesList(!showNotesList)}>\n        <span className=\"burger-line burger-line-1\"></span>\n        <span className=\"burger-line burger-line-1\"></span>\n        <span className=\"burger-line burger-line-1\"></span>\n      </div>\n      <CSSTransition\n        in={showNotesList}\n        timeout={200}\n        classNames=\"sidebar-wrapper\">\n        <div\n          className=\"sidebar-wrapper\"\n          ref={ref => (sideBarRef.current = ref)}>\n          <div className=\"sidebar-container\">\n            <h1>Notes app</h1>\n            <a href=\"/\" onClick={handleAddNoteClick}>\n              Add note\n            </a>\n            <SideBarNotesList />\n          </div>\n        </div>\n      </CSSTransition>\n      {addMode && <AddNote toggleMode={toggleMode} />}\n    </>\n  );\n}\n\nexport default SideBar;\n","import React from 'react';\n\nconst Error = () => {\n  return (\n    <div className=\"error-container\">\n      <h1>This note wasn't found</h1>\n    </div>\n  );\n};\n\nexport default Error;\n","import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\n\nconst Empty = () => {\n  const [shown, setShown] = useState(false);\n\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      setShown(true);\n    }, 1000);\n    return clearTimeout(timeoutId);\n  }, []);\n\n  return (\n    <div className=\"empty-container\">\n      <h1>You don't have any note</h1>\n      <p\n        className={classNames('add-new-info', {\n          'add-new-info--shown': shown,\n        })}>\n        ← Click here to add one\n      </p>\n    </div>\n  );\n};\n\nexport default Empty;\n","import React, { useEffect, useState } from 'react';\nimport NoteContainer from '../components/NoteContainer';\nimport SideBar from '../components/SideBar';\n\nimport { useParams, useHistory } from 'react-router-dom';\nimport Error from '../components/Error';\nimport { ListNoteItem } from '../helpers/interfaces';\nimport Empty from '../components/Empty';\nimport { useNotes } from '../hooks/useNotes';\nimport { NotesParams } from './Routes';\n\nfunction Home() {\n  const [isError, setIsError] = useState(false);\n  const [isEmpty, setIsEmpty] = useState(false);\n\n  const { noteId } = useParams<NotesParams>();\n  const { notes } = useNotes();\n  const { push } = useHistory();\n\n  useEffect(() => {\n    document.title = noteId || 'notes';\n\n    if (!notes || notes.length === 0) {\n      setIsEmpty(true);\n    } else {\n      setIsEmpty(false);\n      if (!noteId && notes.length > 0) {\n        push(`/note/${notes[0].name}`);\n      }\n\n      if (notes.some((item: ListNoteItem) => item.name === noteId)) {\n        setIsError(false);\n      } else {\n        setIsError(true);\n      }\n    }\n  }, [noteId, notes, push]);\n\n  return (\n    <div className=\"home-container\">\n      <SideBar />\n      {!isError && !isEmpty && <NoteContainer key={noteId} />}\n      {!isError && isEmpty && <Empty />}\n      {isError && !isEmpty && <Error />}\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './Home';\nimport { NotesProvider } from '../contexts/NotesProvider';\nimport { ToastContainer } from 'react-toastify';\n\nexport interface NotesParams {\n  noteId: string;\n}\n\nexport default function Routes() {\n  return (\n    <Router basename=\"/\">\n      <div>\n        <NotesProvider>\n          <Switch>\n            <Route path=\"/note/:noteId\" children={<Home />} />\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </NotesProvider>\n        <ToastContainer />\n      </div>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport './styles/gh-markdown.css';\nimport Routes from './screens/Routes';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css';\nimport 'codemirror/theme/neat.css';\nimport 'codemirror/mode/xml/xml.js';\nimport 'codemirror/mode/markdown/markdown.js';\nimport 'codemirror/mode/javascript/javascript.js';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Cog_font_awesome.69de4447.svg\";"],"sourceRoot":""}